# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Image {
  image_id: String!
  product: Product!
  image_isMain: Boolean!
  image_url: String!
}

type Pick {
  pick_id: String
  product: Product!
  user: User!
}

type Product {
  product_id: String!
  user: User!
  images: [Image!]!
  pick: [Pick!]!
  product_title: String!
  product_category: PRODUCT_CATEGORY_ENUM!
  product_sub_category: String!
  product_summary: String
  product_minAmount: String
  product_possibleAmount: String
  product_date: String
  product_main_text: String!
  product_sellOrBuy: Boolean!
  product_workDay: WORKDAY_STATUS_ENUM!
  product_startTime: Int!
  product_endTime: Int!
  product_workTime: Int
  product_postNum: String
  product_roadAddress: String
  product_detailAddress: String
  product_deletedAt: DateTime
  mileage: Mileage
}

enum PRODUCT_CATEGORY_ENUM {
  IT
  DESIGN
  TRANSLATE
  VIDEO
  MARKETING
  DOCUMENT
}

enum WORKDAY_STATUS_ENUM {
  WEEKDAY
  WEEKEND
  NEGOTIATION
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mileage {
  mileage_id: String!
  user: User!
  mileage_status: MILEAGE_STATUS_ENUM!
  mileage_coupon: COUPON_TYPE_ENUM
  payment_amount: Int!
  mileage_createdAt: DateTime!
  product: Product!
}

enum MILEAGE_STATUS_ENUM {
  INCOME
  EXPENSE
}

enum COUPON_TYPE_ENUM {
  ONE_DAY
  THREE_DAYS
  SEVEN_DAYS
  NONE
}

type Payment {
  payment_id: String!
  payment_impUid: String!
  payment_amount: Int!
  payment_status: PAYMENT_STATUS_ENUM!
  payment_type: String!
  user: User!
  payment_createdAt: DateTime!
}

enum PAYMENT_STATUS_ENUM {
  PAYMENT
  CANCEL
  SELL
  REQUEST
  REFUND
}

type Slot {
  slot_id: String!
  user: User!
  slot_first: Boolean!
  slot_second: Boolean!
  slot_third: Boolean!
}

type User {
  user_id: String!
  payment: [Payment!]!
  product: [Product!]!
  mileage: [Mileage!]!
  user_email: String!
  user_password: String!
  user_name: String!
  user_nickname: String!
  user_phone: String!
  user_provider: String
  user_profileImage: String
  user_introduce: String
  user_portfolio: String
  user_workRate: Int!
  user_point: Int!
  user_mileage: Int!
  slot: Slot!
}

type Request {
  request_id: String!
  product: Product!
  seller_id: String!
  seller_nickname: String!
  seller_profileImage: String!
  seller_email: String!
  buyer_id: String!
  buyer_nickname: String!
  buyer_profileImage: String!
  buyer_email: String!
  request_isAccept: REQUEST_ISACCEPT_ENUM!
  request_price: Int!
  request_createAt: DateTime!
  request_startAt: DateTime
  request_sendAt: DateTime
  request_completedAt: DateTime
  request_title: String!
  request_content: String!
  request_dueDate: DateTime!
}

enum REQUEST_ISACCEPT_ENUM {
  WAITING
  ACCEPT
  REFUSE
  FINISH
}

type FetchProductOutput {
  product_product_id: String!
  product_product_title: String!
  product_product_category: String!
  product_product_sub_category: String!
  product_product_workDay: String!
  product_product_sellOrBuy: Boolean!
  product_product_minAmount: String
  product_product_possibleAmount: String
  product_product_date: String
  product_product_createdAt: DateTime!
  u_user_nickname: String!
  u_user_profileImage: String
  i_image_url: String!
}

type FetchSubCategoryOutput {
  product_product_id: String!
  product_product_title: String!
  product_product_category: String!
  product_product_sub_category: String!
  product_product_workDay: String!
  product_product_sellOrBuy: Boolean!
  product_product_minAmount: String
  product_product_possibleAmount: String
  product_product_date: String
  product_product_createdAt: DateTime!
  u_user_nickname: String!
  u_user_profileImage: String
  i_image_url: String!
}

type FetchLikeCategoryOutput {
  product_product_id: String!
  product_product_title: String!
  product_product_category: String!
  product_product_sub_category: String!
  product_product_workDay: String!
  product_product_sellOrBuy: Boolean!
  u_user_nickname: String!
  u_user_profileImage: String
  image_url: String!
  pick_count: Float!
}

type FetchSearchProductOutput {
  product_product_id: String!
  product_product_title: String!
  product_product_category: String!
  product_product_sub_category: String!
  product_product_workDay: String!
  product_product_sellOrBuy: Boolean!
  u_user_nickname: String!
  u_user_profileImage: String
  image_url: String!
  pick_count: Float!
  product_product_summary: String
}

type FetchLikeSubCategoryOutput {
  product_product_id: String!
  product_product_title: String!
  product_product_category: String!
  product_product_sub_category: String!
  product_product_workDay: String!
  product_product_sellOrBuy: Boolean!
  u_user_nickname: String!
  u_user_profileImage: String
  image_url: String!
  pick_count: Float!
}

type CancelPaymentOutput {
  payment_id: String!
  payment_impUid: String!
  payment_amount: Int!
  payment_status: String!
  payment_type: String!
  payment_createdAt: DateTime!
}

type FetchMyPickOutput {
  pick_pick_id: String!
  p_product_id: String!
  p_product_title: String!
  p_product_category: String!
  p_product_workDay: String!
  p_product_sellOrBuy: Boolean!
  p_product_summary: String!
  u_user_nickname: String!
  u_user_profileImage: String
  i_image_url: String!
}

type Comment {
  comment_id: String!
  request: Request!
  comment_text: String!
  sender_id: String!
  user: User!
  comment_createdAt: DateTime!
}

type Query {
  fetchLoginUser: User!
  fetchUserSlot: Slot!
  fetchProducts(page: Float!, pageSize: Float!): [FetchProductOutput!]!
  fetchAllProducts: [FetchProductOutput!]!
  fetchRandomProduct: [FetchProductOutput!]!
  fetchSellProduct: [FetchProductOutput!]!
  fetchSearchProduct(search: String!, page: Float!, pageSize: Float!): [FetchSearchProductOutput!]!
  fetchCategoryProduct(product_category: String!, page: Float!, pageSize: Float!): [FetchProductOutput!]!
  fetchMyCategoryProduct(product_category: String!, page: Float!, pageSize: Float!): [Product!]!
  fetchLikeCategoryProduct(product_category: String!, page: Float!, pageSize: Float!): [FetchLikeCategoryOutput!]!
  fetchSubCategoryProduct(product_sub_category: String!, page: Float!, pageSize: Float!): [FetchSubCategoryOutput!]!
  fetchLikeSubCategoryProduct(product_sub_category: String!, page: Float!, pageSize: Float!): [FetchLikeSubCategoryOutput!]!
  fetchSellCategoryProducts(product_category: String!, page: Float!, pageSize: Float!): [FetchProductOutput!]!
  fetchNewbieProduct: [FetchProductOutput!]!
  fetchDetailProduct(product_id: String!): Product!
  fetchMyProduct(page: Float!, pageSize: Float!): [Product!]!
  fetchSellMyProduct(page: Float!, pageSize: Float!): [Product!]!
  fetchMyNotCouponProduct: [Product!]!
  fetchBuyerRequest: [Request!]!
  fetchOneRequest(request_id: String!): Request!
  fetchSellerWork: [Request!]!
  fetchPayments(payment_status: String, page: Float!, pageSize: Float!): [Payment!]!
  fetchComments(request_id: String!): [Comment!]!
  fetchPickUserProduct(page: Float!, pageSize: Float!): [FetchMyPickOutput!]!
  fetchPickOrNot(product_id: String!): Boolean!
  fetchMileageHistory: [Mileage!]!
  fetchMileageProductHistory: [Product!]!
  fetchRandomMileageProduct(category: String!): [Product!]!
}

type Mutation {
  login(user_email: String!, user_password: String!): String!
  logout: String!
  restoreAccessToken: String!
  sendTokenEmail(user_email: String!): String!
  checkValidTokenEMAIL(user_email: String!, user_token: String!): Boolean!
  sendTokenSMS(user_phone: String!): String!
  checkValidTokenFindEmailBySMS(user_phone: String!, user_token: String!): String!
  checkValidTokenFindPwdBySMS(user_phone: String!, user_token: String!): Boolean!
  resetPassword(user_phone: String!, new_password: String!): Boolean!
  resetPasswordSettingPage(password: String!, new_password: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateNicknameIntroduce(updateNicknameIntroduceInput: UpdateNicknameIntroduceInput!): User!
  updateProfileImage(user_url: String!): User!
  updateUserInfo(updateUserInfoInput: UpdateUserInfoInput!): User!
  deleteUser: Boolean!
  uploadFile(files: [Upload!]!): [String!]!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(product_id: String!, updateProductInput: UpdateProductInput!): Boolean!
  deleteLoginProduct(product_id: String!): Boolean!
  sendRequest(createRequestInput: CreateRequestInput!): Request!
  requestAcceptRefuse(acceptRefuse: String!, request_id: String!): Request!
  requestProcess(process: String!, request_id: String!): Boolean!
  createPayment(payment_impUid: String!, payment_amount: Int!, payment_type: String!): Payment!
  cancelPayment(payment_impUid: String!, payment_type: String!): CancelPaymentOutput!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createPick(product_id: String!): String!
  purchaseCoupon(coupon: String!, productId: String!): Boolean!
}

input CreateUserInput {
  user_email: String!
  user_password: String!
  user_nickname: String!
  user_phone: String!
  user_name: String!
}

input UpdateNicknameIntroduceInput {
  user_nickname: String
  user_introduce: String
}

input UpdateUserInfoInput {
  user_name: String
  user_email: String
  user_portfolio: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateProductInput {
  product_sellOrBuy: Boolean!
  product_title: String!
  product_category: String!
  product_sub_category: String!
  product_summary: String
  product_main_text: String!
  product_workDay: String!
  product_workTime: Int
  product_startTime: Int!
  product_endTime: Int!
  product_minAmount: String
  product_possibleAmount: String
  product_date: String
  product_thumbnailImage: [Thumbnail!]
  product_postNum: String
  product_roadAddress: String
  product_detailAddress: String
}

input Thumbnail {
  thumbnailImage: String!
  isMain: Boolean!
}

input UpdateProductInput {
  product_sellOrBuy: Boolean
  product_title: String
  product_category: String
  product_sub_category: String
  product_summary: String
  product_main_text: String
  product_workDay: String
  product_workTime: Int
  product_startTime: Int
  product_endTime: Int
  product_minAmount: String
  product_possibleAmount: String
  product_date: String
  product_thumbnailImage: [Thumbnail!]
  product_postNum: String
  product_roadAddress: String
  product_detailAddress: String
}

input CreateRequestInput {
  product_id: String!
  request_title: String!
  request_content: String!
  request_price: Int!
  request_dueDate: DateTime!
}

input CreateCommentInput {
  request_id: String!
  sender_id: String!
  text: String!
}